plugins {
    id 'base'
}

def compilationTargets = [
//    'wasm32-unknown-emscripten',
'wasm32-unknown-unknown',
'wasm32-wasi',
'wasm32-wasip1',
//    wasm32-wasip1-threads,
'wasm32-wasip2'
]

String[] buildBinCommand(String bin, String target) {
    return new String[]{'cargo', 'build', '--bin', bin, '--target', target, '--release'}
}

String[] buildLibCommand(String target) {
    // seems a project can only have one?
    return new String[]{'cargo', 'build', '--lib', '--target', target, '--release'}
}

tasks.named('build') {
    dependsOn tasks.matching { it.name.startsWith('build-') }
}

compilationTargets.each { target ->
    ['random_numbers', 'hello'].each { bin ->
        tasks.register("build-${bin}-${target}", Exec) {
            commandLine buildBinCommand(bin, target)
        }
    }
    tasks.register("build-library-${target}", Exec) {
        commandLine buildLibCommand(target)
    }
}

tasks.register('run', Exec) {
    dependsOn 'buildRust'
    commandLine 'cargo', 'run', '--release'
}

tasks.named('clean') {
    doLast {
        file('target').deleteDir()
    }
}
